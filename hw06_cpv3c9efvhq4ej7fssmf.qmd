---
title: "Homework Assignment: Sentiment Analysis of Emma"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo       = TRUE, 
                      fig.align  = "center",
                      fig.height = 3, fig.width = 4)
library(ggplot2)
library(janeaustenr)
library(tidytext)
library(gutenbergr)
library(wordcloud)
library(tidyverse)
library(textdata)

```

**Title**: Exploring Joyful Language in Jane Austen’s *Emma* using Tidytext

**Objective**:

Use the **`tidytext`** package and three different **sentiment lexicons** (`nrc`, `afinn`, `bing`) to explore **positive/joyful words** in *Emma* by Jane Austen. You will tokenize the text, apply sentiment filters, visualize frequent sentiment words using `ggplot2`, and create a word cloud.

# **1. Data Preparation**

-   Load the `austen_books()` dataset from the **`janeaustenr`** package.
-   Group by book and detect chapter boundaries using regex.
-   Create `linenumber` and `chapter` columns.

```{r}
austen <- austen_books() %>% 
  group_by(book) %>% 
  mutate(
    linenumber = row_number(),
    chapter = cumsum(str_detect(
      text,
      regex("^chapter [\\divxlc]",
        ignore_case = TRUE
      )
    )),
    .before = text
  ) %>% 
  ungroup() %>% 
  select(book, chapter, linenumber, text)
```

# **2. Tokenization**

-   Use `unnest_tokens()` to tokenize text into individual words.
-   Explain briefly **why we name the output column `word`** (include this as a comment in your script).

```{r}
tidy_austen <- austen %>% 
  unnest_tokens(word, text) %>%
  mutate(word = str_extract(word, "[a-z']+")) %>% #output column is named "word" because the tokenization is performed by unit of word, rather than other unit (e.g. sentence, paragraph, etc.)
  anti_join(stop_words, by = "word") ## filter out stop words

tidy_austen %>% slice_sample(n = 5)
```

# **3. Sentiment Analysis**

## Filter joy/positive words from **each** of the three sentiment lexicons:

-   `nrc` (joy)

    ```{r}
    # nrc sentiment lexicon (one of ten emotions)
    nrc_joy <- get_sentiments("nrc") %>% 
      filter(sentiment == "joy")

    nrc_joy %>% slice_sample(n = 10)
    ```

-   `afinn` (positive scores ≥ 1)

    ```{r}
    # afinn sentiment lexicon (values from -5 to +5)
    afinn_positive <- get_sentiments("afinn") %>% 
      filter(value >= 1)

    afinn_positive %>% slice_sample(n = 10)
    ```

-   `bing` (positive)

    ```{r}
    # bing sentiment lexicon (positive or negative)
    bing_positive <- get_sentiments("bing") %>% 
      filter(sentiment == "positive")

    bing_positive %>% slice_sample(n = 10)
    ```

## Join each with *Emma*'s text and:

-   Count word frequency.
-   Filter for frequently occurring words (`n > 50`).
-   Visualize using a **bar chart** (`ggplot2`) and a **word cloud** (`wordcloud`).

### nrc

```{r}
# subsetting the words from "Emma" and joining to the "joy" words in nrc lexicon
emma_nrc <- tidy_austen %>% 
  filter(book == "Emma") %>% 
  inner_join(nrc_joy, by = "word") %>% 
  count(word, sort = TRUE) %>% 
  filter(n > 50)

emma_nrc

  
# bar chart
emma_nrc %>%
  mutate(word = fct_reorder(word, n)) %>% 
  ggplot(aes(x = n, y = word)) +
  geom_col(show.legend = FALSE) +
  labs(title = "Most frequent joy-category words in novel \"Emma\"",
       subtitle = "using the nrc sentiment lexicon",
       x = "Count",
       y = "Word") +
  theme_gray()
  

# word cloud
emma_nrc %>%
  with(wordcloud(word, n, max.words = 30))
```

### afinn

```{r}
emma_afinn <- tidy_austen %>% 
  filter(book == "Emma") %>% 
  inner_join(afinn_positive, by = "word") %>% 
  count(word, sort = TRUE) %>% 
  filter(n > 50)

emma_afinn


# bar chart
emma_afinn %>%
  mutate(word = fct_reorder(word, n)) %>% 
  ggplot(aes(x = n, y = word)) +
  geom_col(show.legend = FALSE) +
  labs(title = "Most frequent words rated +1 or higher in novel \"Emma\"",
       subtitle = "using the afinn sentiment lexicon",
       x = "Count",
       y = "Word") +
  theme_gray()

# word cloud
emma_afinn %>%
  with(wordcloud(word, n, max.words = 30))
```

### bing

```{r}
emma_bing <- tidy_austen %>% 
  filter(book == "Emma") %>% 
  inner_join(bing_positive, by = "word") %>% 
  count(word, sort = TRUE) %>% 
  filter(n > 50)
  
emma_bing

# bar chart
emma_bing %>%
  mutate(word = fct_reorder(word, n)) %>% 
  ggplot(aes(x = n, y = word)) +
  geom_col(show.legend = FALSE) +
  labs(title = "Most frequent positive words in novel \"Emma\"",
       subtitle = "using the bing sentiment lexicon",
       x = "Count",
       y = "Word") +
  theme_gray()

# word cloud
emma_nrc %>%
  with(wordcloud(word, n, max.words = 30))
```
